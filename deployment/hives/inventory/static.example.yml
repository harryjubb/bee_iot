hives:
  hosts:
    currenthostname:
      # Hostname to set this Pi to
      pi_hostname: desiredhostname
      # Password for the pi user
      pi_password: thepassword
      # remote.it setup
      remoteit_enabled: true
      # WiFi networks to connect this hive to
      hive_wifi_networks:
        - ssid: example_ssid
          psk: example_passcode
          id_str: example_network
      # Hive environment variables for this hive
      # Used to set the environment for Dockerised hive services
      # Details of how to set values in bee_iot/hive/.env.example
      hive_name: hivename
      hive_streaming_enabled: "true"
      hive_environment_enabled: "true"
      # `hive_alsa_device` is auto-detected if not set
      # Must have a USB sound card with capture capability
      # plugged in to the Pi
      # hive_alsa_device: hw:1,0
      hive_audio_channels: "1"
      hive_rtmp_url: rtmps://example.com:1935/publish
      hive_stream_key: hivename
      hive_stream_secret_key: secretkey
      hive_influxdb_api_token: yourtoken
      hive_influxdb_org: yourorgoninfluxdb
      hive_influxdb_bucket: bucketname
      hive_influxdb_url: https://influxdb.example.com
  vars:
    ansible_user: pi
    # When setting up Pis, the default is no public-key auth and the default
    # password of `raspberry`
    #
    # Ansible will prefer public key auth (set up on first run)
    # after using password auth the first time. The Pi password is then
    # immediately changed to the value in `pi_password` in the first run
    #
    # `sshpass` must be installed for this to work
    ansible_ssh_pass: raspberry
    ansible_python_interpreter: python3
    wpa_wifi_country: GB
    group_wifi_networks:
      - ssid: example_ssid
        psk: example_passcode
        id_str: example_network
      - ssid: example_ssid_2
        psk: example_passcode_2
        id_str: example_network_2
    remoteid_access_key: example
    remoteid_access_key_secret: example
    remoteid_api_key: example
